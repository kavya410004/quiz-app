[{"S.NO":1,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":" Hash table refers to","OPTION A":"A data structure that maps keys to values using a hash function","OPTION B":"A linear list of elements","OPTION C":"A tree structure that sorts data","OPTION D":"A sequential array for storing elements","CORRECT ANSWER":"A"},{"S.NO":2,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which of the following problems is addressed by hash functions in hash tables?","OPTION A":"Sorting elements","OPTION B":"Avoiding collisions","OPTION C":"Finding the shortest path","OPTION D":"Allocating memory","CORRECT ANSWER":"B"},{"S.NO":3,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is the main advantage of using a hash table?","OPTION A":"Fixed size","OPTION B":"Ordered data storage","OPTION C":"Fast insertion, deletion, and lookup operations","OPTION D":"Easy to implement","CORRECT ANSWER":"C"},{"S.NO":4,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which method is commonly used to handle collisions in hash tables?","OPTION A":"Binary search","OPTION B":"Linear probing","OPTION C":"Quick sort","OPTION D":"Depth-first search","CORRECT ANSWER":"B"},{"S.NO":5,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"In hash tables, what is a collision?","OPTION A":"When two keys hash to different values","OPTION B":"When a key is not found","OPTION C":"When two keys hash to the same value","OPTION D":"When a key's value is null","CORRECT ANSWER":"C"},{"S.NO":6,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What does the load factor of a hash table represent?","OPTION A":"The number of elements divided by the size of the hash table","OPTION B":"The total number of keys","OPTION C":"The maximum number of elements that can be stored","OPTION D":"The efficiency of the hash function","CORRECT ANSWER":"A"},{"S.NO":7,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which collision resolution technique uses linked lists?","OPTION A":"Linear probing","OPTION B":"Quadratic probing","OPTION C":"Double hashing","OPTION D":"Separate chaining","CORRECT ANSWER":"D"},{"S.NO":8,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is the purpose of a rehashing process in a hash table?","OPTION A":"To sort the elements","OPTION B":"To resize the hash table and reduce the load factor","OPTION C":"To handle key-value pair deletions","OPTION D":"To compress the hash values","CORRECT ANSWER":"B"},{"S.NO":9,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which of the following best describes double hashing?","OPTION A":"Using two hash functions to handle collisions","OPTION B":"Using a hash function twice to reduce collisions","OPTION C":"Storing two values for each key","OPTION D":"Allocating memory twice for each key-value pair","CORRECT ANSWER":"A"},{"S.NO":10,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is the expected time complexity for search, insert, and delete operations in a hash table?","OPTION A":"O(log n)","OPTION B":"O(n)","OPTION C":"O(n^2)","OPTION D":"O(1)","CORRECT ANSWER":"D"},{"S.NO":11,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is dynamic programming?","OPTION A":"A method for sorting data efficiently","OPTION B":"A method for solving complex problems by breaking them down into simpler subproblems","OPTION C":"A way to execute multiple threads concurrently","OPTION D":"A technique for compressing data","CORRECT ANSWER":"B"},{"S.NO":12,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which problem characteristic makes it suitable for dynamic programming?","OPTION A":"Problems that can be divided into overlapping subproblems","OPTION B":"Problems that require sorting large datasets","OPTION C":"Problems that are computationally expensive and cannot be simplified","OPTION D":"Problems that involve concurrent processing","CORRECT ANSWER":"A"},{"S.NO":13,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is the main difference between dynamic programming and divide-and-conquer?","OPTION A":"Dynamic programming uses a recursive approach, while divide-and-conquer uses an iterative approach","OPTION B":"Dynamic programming is used for problems without overlapping subproblems","OPTION C":"Dynamic programming stores results of subproblems to avoid redundant computations, while divide-and-conquer does not","OPTION D":"Divide-and-conquer is used for problems with overlapping subproblems, while dynamic programming is not","CORRECT ANSWER":"C"},{"S.NO":14,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"In dynamic programming, what is the purpose of memoization?","OPTION A":"To sort the results of subproblems","OPTION B":"To store the results of solved subproblems to avoid redundant computations","OPTION C":"To execute subproblems in parallel","OPTION D":"To delete results of subproblems after use","CORRECT ANSWER":"B"},{"S.NO":15,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which of the following problems is typically solved using dynamic programming?","OPTION A":"Binary search","OPTION B":"Matrix chain multiplication","OPTION C":"Quick sort","OPTION D":"Depth-first search","CORRECT ANSWER":"B"},{"S.NO":16,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is the key characteristic of a problem that allows the use of dynamic programming?","OPTION A":"Optimal substructure","OPTION B":"Large data sets","OPTION C":"Concurrent processing","OPTION D":"High memory usage","CORRECT ANSWER":"A"},{"S.NO":17,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which dynamic programming approach solves subproblems and stores their solutions in a table in a bottom-up manner?","OPTION A":"Memoization","OPTION B":"Recursive approach","OPTION C":"Iterative approach","OPTION D":"Divide-and-conquer","CORRECT ANSWER":"C"},{"S.NO":18,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is the time complexity of the dynamic programming solution for the Fibonacci sequence using memoization?","OPTION A":"O(1)","OPTION B":"O(n)","OPTION C":"O(n^2)","OPTION D":"O(log n)","CORRECT ANSWER":"B"},{"S.NO":19,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which of the following is a common application of dynamic programming?","OPTION A":"Finding the shortest path in a graph","OPTION B":"Sorting a large list of numbers","OPTION C":"Compiling a program","OPTION D":"Creating a binary tree","CORRECT ANSWER":"A"},{"S.NO":20,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which principle is used in dynamic programming to ensure that the global optimal solution is composed of optimal solutions to subproblems?","OPTION A":"Greedy method","OPTION B":"Optimal substructure","OPTION C":"Iterative deepening","OPTION D":"Breadth-first search","CORRECT ANSWER":"B"},{"S.NO":21,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is a greedy algorithm?","OPTION A":"An algorithm that always finds the optimal solution by considering all possible solutions","OPTION B":"An algorithm that makes a series of choices, each of which looks best at the moment","OPTION C":"An algorithm that sorts data before processing","OPTION D":"An algorithm that processes data in parallel","CORRECT ANSWER":"B"},{"S.NO":22,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which of the following problems is typically solved using a greedy algorithm?","OPTION A":"Matrix chain multiplication","OPTION B":"Knapsack problem (0/1 variant)","OPTION C":"Huffman coding","OPTION D":"Sorting a list of numbers","CORRECT ANSWER":"C"},{"S.NO":23,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is the key characteristic of a problem that makes it suitable for a greedy algorithm?","OPTION A":"The problem has overlapping subproblems","OPTION B":"The problem has an optimal substructure","OPTION C":"The problem requires all possible solutions to be considered","OPTION D":"The problem has a globally optimal solution that can be reached by making locally optimal choices","CORRECT ANSWER":"D"},{"S.NO":24,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which of the following is a correct example of a greedy choice property?","OPTION A":"Choosing the smallest available item in the knapsack problem","OPTION B":"Selecting the longest path in a graph","OPTION C":"Always picking the item with the highest value-to-weight ratio in the fractional knapsack problem","OPTION D":"Dividing the problem into overlapping subproblems","CORRECT ANSWER":"C"},{"S.NO":25,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which algorithm uses a greedy approach to solve the shortest path problem in graphs?","OPTION A":"Dijkstra’s algorithm","OPTION B":"Floyd-Warshall algorithm","OPTION C":"Depth-first search","OPTION D":"Bellman-Ford algorithm","CORRECT ANSWER":"A"},{"S.NO":26,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is the primary disadvantage of a greedy algorithm?","OPTION A":"It always finds the optimal solution","OPTION B":"It requires extensive backtracking","OPTION C":"It may not always produce an optimal solution","OPTION D":"It is difficult to implement","CORRECT ANSWER":"C"},{"S.NO":27,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which problem cannot be solved optimally by a greedy algorithm?","OPTION A":"Fractional knapsack problem","OPTION B":"Prim’s minimum spanning tree","OPTION C":"Job scheduling with deadlines","OPTION D":"0/1 knapsack problem","CORRECT ANSWER":"D"},{"S.NO":28,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"In the activity selection problem, how are activities typically sorted to apply the greedy algorithm?","OPTION A":"By their start times","OPTION B":"By their end times","OPTION C":"By their durations","OPTION D":"By their values","CORRECT ANSWER":"B"},{"S.NO":29,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"In the coin change problem, what is the greedy algorithm's approach for making change?","OPTION A":"Always choose the smallest denomination coin first","OPTION B":"Always choose the largest denomination coin first","OPTION C":"Choose coins randomly until the total is met","OPTION D":"Use dynamic programming to find the optimal solution","CORRECT ANSWER":"B"},{"S.NO":30,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which statement best describes the relationship between greedy algorithms and dynamic programming?","OPTION A":"Greedy algorithms always provide the optimal solution, whereas dynamic programming may not","OPTION B":"Greedy algorithms solve problems with overlapping subproblems, while dynamic programming does not","OPTION C":"Greedy algorithms make locally optimal choices, while dynamic programming finds the optimal solution by considering all subproblems","OPTION D":"Dynamic programming is a subset of greedy algorithms","CORRECT ANSWER":"C"},{"S.NO":31,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which of the following is a characteristic of a directed graph?","OPTION A":"Each edge has a direction associated with it","OPTION B":"Each edge has no direction","OPTION C":"It cannot have cycles","OPTION D":"It must be acyclic","CORRECT ANSWER":"A"},{"S.NO":32,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What does a \"cycle\" in a graph refer to?","OPTION A":"A path with at least one edge","OPTION B":"A sequence of vertices starting and ending at the same vertex without repeating any vertex","OPTION C":"A path that visits every vertex exactly once","OPTION D":"A subgraph with no edges","CORRECT ANSWER":"B"},{"S.NO":33,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which algorithm is commonly used to find the shortest path in an unweighted graph?","OPTION A":"Dijkstra’s algorithm","OPTION B":"Bellman-Ford algorithm","OPTION C":"Breadth-First Search (BFS)","OPTION D":"Depth-First Search (DFS)","CORRECT ANSWER":"C"},{"S.NO":34,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is the time complexity of Depth-First Search (DFS) in terms of vertices VVV and edges EEE?","OPTION A":"O(V)","OPTION B":"O(E)","OPTION C":"O(V + E)","OPTION D":"O(V * E)","CORRECT ANSWER":"C"},{"S.NO":35,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which of the following statements about Minimum Spanning Trees (MST) is true?","OPTION A":"The MST contains all the vertices of the original graph and minimizes the sum of the edge weights","OPTION B":"The MST contains all the edges of the original graph","OPTION C":"There can be multiple MSTs with different weights in the same graph","OPTION D":"The MST is always unique for any graph","CORRECT ANSWER":"A"},{"S.NO":36,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which algorithm can be used to detect negative weight cycles in a graph?","OPTION A":"Dijkstra’s algorithm","OPTION B":"Bellman-Ford algorithm","OPTION C":"Kruskal’s algorithm","OPTION D":"Prim’s algorithm","CORRECT ANSWER":"B"},{"S.NO":37,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"In a graph, what is the degree of a vertex?","OPTION A":"The number of edges connected to it","OPTION B":"The shortest path length from the vertex to all other vertices","OPTION C":"The number of vertices adjacent to it","OPTION D":"The weight of the vertex","CORRECT ANSWER":"A"},{"S.NO":38,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which traversal algorithm is typically used to find connected components in an undirected graph?","OPTION A":"Breadth-First Search (BFS)","OPTION B":"Dijkstra’s algorithm","OPTION C":"Bellman-Ford algorithm","OPTION D":"Kruskal’s algorithm","CORRECT ANSWER":"A"},{"S.NO":39,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is the primary difference between a tree and a graph?","OPTION A":"Trees do not have cycles, whereas graphs can have cycles","OPTION B":"Trees can only be undirected, while graphs can only be directed","OPTION C":"Trees have exactly two children per node, whereas graphs do not have children","OPTION D":"Trees have more vertices than graphs","CORRECT ANSWER":"A"},{"S.NO":40,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which graph representation is most efficient for sparse graphs?","OPTION A":"Adjacency list","OPTION B":"Adjacency matrix","OPTION C":"Incidence matrix","OPTION D":"Edge list","CORRECT ANSWER":"A"},{"S.NO":41,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which of the following data structures is typically used for implementing a stack?","OPTION A":"Array","OPTION B":"Linked list","OPTION C":"Both array and linked list","OPTION D":"Hash table","CORRECT ANSWER":"C"},{"S.NO":42,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is the time complexity for inserting an element at the beginning of a singly linked list?","OPTION A":"O(1)","OPTION B":"O(n)","OPTION C":"O(log n)","OPTION D":"O(n log n)","CORRECT ANSWER":"A"},{"S.NO":43,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which data structure is best suited for implementing a priority queue?","OPTION A":"Stack","OPTION B":"Binary search tree","OPTION C":"Heap","OPTION D":"Queue","CORRECT ANSWER":"C"},{"S.NO":44,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"In a binary search tree, what is the average time complexity for search operations?","OPTION A":"O(1)","OPTION B":"O(n)","OPTION C":"O(log n)","OPTION D":"O(n log n)","CORRECT ANSWER":"C"},{"S.NO":45,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is a common application of a queue data structure?","OPTION A":"Managing function calls","OPTION B":"Storing data that needs to be processed in a last-in-first-out (LIFO) manner","OPTION C":"Scheduling processes in an operating system","OPTION D":"Performing depth-first search in graphs","CORRECT ANSWER":"C"},{"S.NO":46,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which data structure would you use to implement a breadth-first search (BFS) on a graph?","OPTION A":"Stack","OPTION B":"Queue","OPTION C":"Heap","OPTION D":"Hash table","CORRECT ANSWER":"B"},{"S.NO":47,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What is the primary characteristic of a circular linked list?","OPTION A":"It has a fixed size","OPTION B":"The last node points to the first node, forming a loop","OPTION C":"Each node points to its previous and next nodes","OPTION D":"It has a dummy head node","CORRECT ANSWER":"B"},{"S.NO":48,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"What type of data structure is a hash table?","OPTION A":"Linear data structure","OPTION B":"Hierarchical data structure","OPTION C":"Graph data structure","OPTION D":"Associative array","CORRECT ANSWER":"D"},{"S.NO":49,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which traversal method is used in a binary tree to visit nodes in ascending order?","OPTION A":"Pre-order traversal","OPTION B":"In-order traversal","OPTION C":"Post-order traversal","OPTION D":"Level-order traversal","CORRECT ANSWER":"B"},{"S.NO":50,"TOPIC NAME":"TECHNICAL","SECTION NAME":"MODULE  5","QUESTION TEXT":"Which of the following operations is typically not supported efficiently by a singly linked list?","OPTION A":"Insertion at the beginning","OPTION B":"Insertion at the end","OPTION C":"Deletion from the beginning","OPTION D":"Random access of elements","CORRECT ANSWER":"D"}]